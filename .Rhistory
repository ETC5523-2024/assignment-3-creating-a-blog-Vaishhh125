# Load necessary libraries
library(ggplot2)
library(dplyr)
library(readr)
# Load the dataset
df <- read_csv("data /ai_job_market_insights.csv", show_col_types = FALSE)
df <- read_csv("data /ai_job_market_insights.csv")
# Load the dataset
library(readr)
df <- read_csv("data /ai_job_market_insights.csv")
library(readr)
ai_job_market_insights <- read_csv("data /ai_job_market_insights.csv")
View(ai_job_market_insights)
df <- read_csv("data /ai_job_market_insights.csv")
df <- read_csv("data /ai_job_market_insights.csv")
df <- read_csv("data /ai_job_market_insights.csv", show_col_types = FALSE)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(readr)
# Load the dataset
df <- read_csv("data /ai_job_market_insights.csv", show_col_types = FALSE)
# Convert relevant columns to factors
df$AI_Adoption_Level <- factor(df$AI_Adoption_Level, levels = c('Low', 'Medium', 'High'))
df$Automation_Risk <- factor(df$Automation_Risk, levels = c('Low', 'Medium', 'High'))
# Filter for high automation risk
high_risk_df <- df %>%
filter(Automation_Risk == "High")
# Summarize data by counting high-risk jobs in each industry
high_risk_df <- high_risk_df %>%
count(Industry) %>%
arrange(desc(n))
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(readr)
# Load the dataset
df <- read_csv("data /ai_job_market_insights.csv", show_col_types = FALSE)
# Convert relevant columns to factors
df$AI_Adoption_Level <- factor(df$AI_Adoption_Level, levels = c('Low', 'Medium', 'High'))
df$Automation_Risk <- factor(df$Automation_Risk, levels = c('Low', 'Medium', 'High'))
# Filter for high automation risk
high_risk_df <- df %>%
filter(Automation_Risk == "High")
# Summarize data by counting high-risk jobs in each industry
high_risk_df <- high_risk_df %>%
count(Industry) %>%
arrange(desc(n))
# Plot: Industries with High Automation Risk
ggplot(high_risk_df, aes(x = reorder(Industry, -n), y = n)) +
geom_bar(stat = "identity", fill = "lightblue", color = "black") +  # Set fill to a single color
labs(
x = "Industry",
y = "Number of High Risk Jobs",
caption = "Figure 1: Industries with High Automation Risk"  # Add caption below the plot
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none")
# Filter for jobs at high automation risk
high_risk_jobs <- df %>% filter(Automation_Risk == "High")
# Get the top 10 job titles with the highest frequency of high automation risk
top_5_high_risk_jobs <- high_risk_jobs %>%
count(Job_Title, sort = TRUE) %>%
top_n(5, n)
top_10_high_risk_jobs <- high_risk_jobs %>%
count(Job_Title, sort = TRUE) %>%
top_n(10, n)
# Create a bar plot for the top 10 high-risk job titles
ggplot(top_5_high_risk_jobs, aes(x = reorder(Job_Title, n), y = n)) +
geom_bar(stat = "identity", fill = "lightblue", color = "black") +
coord_flip() +
labs(
x = "Job Title",
y = "Number of Jobs",
caption = "Figure 2: Top 5 Jobs at High Automation Risk"  # Add caption below the plot
) +
theme_minimal()
library(knitr)
# Display the top 10 high-risk job titles as a table
kable(top_10_high_risk_jobs,
col.names = c("Job Title", "Number of High Risk Jobs"),
caption = "Top 10 Jobs at High Automation Risk*")  # Add small note to the caption
